{
  "openapi": "3.0.0",
  "info": {
    "title": "CodeChef User Scraper API",
    "version": "1.0.0",
    "description": "Fetch CodeChef user profile data, rating graph data, and recent submissions for a given user handle.",
    "contact": {
      "name": "API Support",
      "url": "https://github.com/gowtham-2oo5/codechef-data-scraper/issues"
    }
  },
  "servers": [
    {
      "url": "https://codechef-scraper-api.onrender.com",
      "description": "Production server"
    },
    {
      "url": "http://localhost:8800",
      "description": "Local development server"
    }
  ],
  "tags": [
    { "name": "Health", "description": "Health check endpoint" },
    { "name": "Whole", "description": "Get aggregated full profile data" },
    { "name": "Profile", "description": "Basic user profile information" },
    { "name": "Ratings", "description": "User rating graph data" },
    { "name": "Recent", "description": "Recent accepted submissions" },
    { "name": "Debug", "description": "Debug chromium for puppeteer" }
  ],
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "User Not Found"
          },
          "message": {
            "type": "string",
            "example": "No CodeChef user found with handle: example_user"
          },
          "status": {
            "type": "integer",
            "example": 404
          }
        }
      }
    }
  },
  "paths": {
    "/health": {
      "get": {
        "tags": ["Health"],
        "summary": "Health Check",
        "description": "Returns OK if the server is up and running.",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          }
        }
      }
    },
    "/api/whole/{handle}": {
      "get": {
        "tags": ["Whole"],
        "summary": "Get full profile data (aggregated)",
        "description": "Fetches all available data (profile, ratings, recent submissions) for the given CodeChef user handle.",
        "parameters": [
          {
            "name": "handle",
            "in": "path",
            "description": "CodeChef username",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Full profile data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "profile": {
                      "type": "object"
                    },
                    "ratings": {
                      "type": "object"
                    },
                    "recent": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/profile/{handle}": {
      "get": {
        "tags": ["Profile"],
        "summary": "Get basic profile data",
        "description": "Returns user name, rating, stars, country, and other basic profile metadata.",
        "parameters": [
          {
            "name": "handle",
            "in": "path",
            "description": "CodeChef username",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Profile data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "currentRating": {
                      "type": "integer",
                      "example": 1500
                    },
                    "stars": {
                      "type": "string",
                      "example": "3â˜…"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/ratings/{handle}": {
      "get": {
        "tags": ["Ratings"],
        "summary": "Get user rating graph data",
        "description": "Returns user's long challenge ratings history for plotting graphs.",
        "parameters": [
          {
            "name": "handle",
            "in": "path",
            "description": "CodeChef username",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Rating graph data retrieved successfully"
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/recent/{handle}": {
      "get": {
        "tags": ["Recent"],
        "summary": "Get recent accepted submissions",
        "description": "Fetches a list of recently accepted problems by the user.",
        "parameters": [
          {
            "name": "handle",
            "in": "path",
            "description": "CodeChef username",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Recent activity retrieved successfully"
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/debug/chrome": {
      "get": {
        "tags": ["Debug"],
        "summary": "Debug chromium for puppeteer",
        "description": "Debug chromium for puppeteer",
        "responses": {
          "200": {
            "description": "Debug information retrieved successfully"
          },
          "500": {
            "description": "Failed to retrieve debug information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  }
}
